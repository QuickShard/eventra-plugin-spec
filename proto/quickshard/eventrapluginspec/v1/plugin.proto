syntax = "proto3";

package quickshard.eventrapluginspec.v1;

option go_package = "github.com/quickshard/eventra-plugin-spec/gen/go/v1";

import "google/protobuf/any.proto";
// PluginSpec is the complete, language-agnostic definition for a plugin.
// It includes JSON name annotations and full documentation comments, serving as
// the single source of truth for the plugin contract.
message PluginSpec {
  // id is the unique identifier for the plugin.
  string id = 1 [json_name = "id"];
  // name is the human-readable display name of the plugin.
  string name = 2 [json_name = "name"];
  // description provides a brief explanation of what the plugin does.
  string description = 3 [json_name = "description"];
  // category helps organize plugins in the UI (e.g., "Crypto", "Logic", "Webhook").
  string category = 4 [json_name = "category"];
  // icon_type gives a hint to the UI about which icon to display (e.g., "signer", "note").
  string icon_type = 5 [json_name = "iconType"];

  // cost represents the computational units consumed by one execution of the plugin.
  uint64 cost = 6 [json_name = "cost"];

  // entry indicates if this plugin can be a starting point for a workflow (i.e., a trigger).
  bool entry = 7 [json_name = "entry"];

  // A list that holds default instances of the input Protobuf messages.
  // The order of this list is critical and defines the contract for the
  // data passed to the plugin's Call function.
  repeated google.protobuf.Any inputs = 8 [json_name = "inputs"];

  // A single, default instance of the output Protobuf message.
  google.protobuf.Any output = 9 [json_name = "output"];

  // Configuration for the plugin, provided as a simple key-value map.
  map<string, string> config = 10 [json_name = "config"];
}